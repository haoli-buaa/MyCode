import java.util.ArrayList;
import java.util.Queue;


public class IntervalMerge {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	}
	public ArrayList<Pair> mergeInterval(ArrayList<Pair> list){
		ArrayList<Pair> res = new ArrayList<Pair>();
		if(list.size() != 0){
			Pair cur = new Pair(list.get(0));
			for(int i = 1; i < list.size(); i++){
				if(inter(cur, list.get(i))){
					cur = merge(cur, list.get(i));
				}
				else{
					res.add(cur);
					cur = list.get(i);
				}
			}
			res.add(cur);
		}
		return res;
	}
	public Pair merge(Pair a, Pair b){
		Pair res = new Pair(a);
		res.left = Math.max(a.left, b.left);
		res.right = Math.max(a.right, b.right);
		return res;
	}
	public boolean inter(Pair a, Pair b){
		if(a.left < b.left && a.right < b.left)
			return false;
		if(b.left < a.left && b.right < a.left)
			return false;
		return true;
	}
}
class Pair implements Comparable<Pair>{
	public int left;
	public int right;
	public Pair(int left, int right){
		this.left = left;
		this.right = right;
	}
	public Pair(Pair p){
		this.left = p.left;
		this.right = p.right;
	}

	public int compareTo(Pair o) {
		// TODO Auto-generated method stub
		if(this.left < o.left)
			return -1;
		if(this.left > o.left)
			return 1;
		return 0;
	}	
}
